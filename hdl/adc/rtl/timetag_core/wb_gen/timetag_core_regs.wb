peripheral {
   name = "Time-tagging core registers";
   description = "Wishbone slave for registers related to time-tagging core";
   hdl_entity = "timetag_core_regs";

   prefix = "timetag_core";

   reg {
      name = "Timetag seconds register (upper)";
      description = "8 upper bits of seconds counter. Incremented everytime the coarse counter overflows.";
      prefix = "seconds_upper";

      field {
	 name = "Timetag seconds";
	 type = SLV;
	 load = LOAD_EXT;
	 size = 8;
	 access_bus = READ_WRITE;
	 access_dev = READ_WRITE;
      };
   };

   reg {
      name = "Timetag seconds register (lower)";
      description = "32 lower bits of seconds counter. Incremented everytime the coarse counter overflows.";
      prefix = "seconds_lower";

      field {
	 name = "Timetag seconds";
	 type = SLV;
	 load = LOAD_EXT;
	 size = 32;
	 access_bus = READ_WRITE;
	 access_dev = READ_WRITE;
      };
   };

   reg {
      name = "Timetag coarse time register, system clock ticks (125MHz)";
      description = "Coarse time counter clocked by 125MHz system clock.\nCounts from 0 to 125000000.";
      prefix = "coarse";

      field {
	 name = "Timetag coarse time";
	 type = SLV;
	 load = LOAD_EXT;
	 size = 28;
	 access_bus = READ_WRITE;
	 access_dev = READ_WRITE;
      };
   };

   reg {
      name = "Time trigger seconds register (upper)";
      description = "8 upper bits of seconds used for timer trigger.";
      prefix = "time_trig_seconds_upper";

      field {
	 name = "Time trigger seconds";
	 type = SLV;
	 size = 8;
	 access_bus = READ_WRITE;
	 access_dev = READ_ONLY;
      };
   };

   reg {
      name = "Time trigger seconds register (lower)";
      description = "32 lower bits of seconds used for time trigger.";
      prefix = "time_trig_seconds_lower";

      field {
	 name = "Time trigger seconds";
	 type = SLV;
	 size = 32;
	 access_bus = READ_WRITE;
	 access_dev = READ_ONLY;
      };
   };

   reg {
      name = "Time trigger coarse time register, system clock ticks (125MHz)";
      description = "Coarse time counter clocked by 125MHz system clock.\nCounts from 0 to 125000000.";
      prefix = "time_trig_coarse";

      field {
	 name = "Time trigger coarse value";
	 type = SLV;
	 size = 28;
	 access_bus = READ_WRITE;
	 access_dev = READ_ONLY;
      };
   };

   reg {
      name = "Trigger time-tag seconds register (upper)";
      prefix = "trig_tag_seconds_upper";

      field {
	 name = "Trigger time-tag seconds";
	 description = "Holds time-tag seconds of the last trigger event";
	 type = SLV;
	 size = 8;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Trigger time-tag seconds register (lower)";
      prefix = "trig_tag_seconds_lower";

      field {
	 name = "Trigger time-tag seconds";
	 description = "Holds time-tag seconds of the last trigger event";
	 type = SLV;
	 size = 32;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Trigger time-tag coarse time (system clock ticks 125MHz) register";
      prefix = "trig_tag_coarse";

      field {
	 name = "Trigger time-tag coarse time";
	 description = "Holds time-tag coarse time of the last trigger event";
	 type = SLV;
	 size = 28;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition start time-tag seconds register (upper)";
      prefix = "acq_start_tag_seconds_upper";

      field {
	 name = "Acquisition start time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition start event";
	 type = SLV;
	 size = 8;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition start time-tag seconds register (lower)";
      prefix = "acq_start_tag_seconds_lower";

      field {
	 name = "Acquisition start time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition start event";
	 type = SLV;
	 size = 32;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition start time-tag coarse time (system clock ticks 125MHz) register";
      prefix = "acq_start_tag_coarse";

      field {
	 name = "Acquisition start time-tag coarse time";
	 description = "Holds time-tag coarse time of the last acquisition start event";
	 type = SLV;
	 size = 28;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition stop time-tag seconds register (upper)";
      prefix = "acq_stop_tag_seconds_upper";

      field {
	 name = "Acquisition stop time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition stop event";
	 type = SLV;
	 size = 8;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition stop time-tag seconds register (lower)";
      prefix = "acq_stop_tag_seconds_lower";

      field {
	 name = "Acquisition stop time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition stop event";
	 type = SLV;
	 size = 32;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition stop time-tag coarse time (system clock ticks 125MHz) register";
      prefix = "acq_stop_tag_coarse";

      field {
	 name = "Acquisition stop time-tag coarse time";
	 description = "Holds time-tag coarse time of the last acquisition stop event";
	 type = SLV;
	 size = 28;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition end time-tag seconds register (upper)";
      prefix = "acq_end_tag_seconds_upper";

      field {
	 name = "Acquisition end time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition end event";
	 type = SLV;
	 size = 8;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition end time-tag seconds register (lower)";
      prefix = "acq_end_tag_seconds_lower";

      field {
	 name = "Acquisition end time-tag seconds";
	 description = "Holds time-tag seconds of the last acquisition end event";
	 type = SLV;
	 size = 32;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

   reg {
      name = "Acquisition end time-tag coarse time (system clock ticks 125MHz) register";
      prefix = "acq_end_tag_coarse";

      field {
	 name = "Acquisition end time-tag coarse time";
	 description = "Holds time-tag coarse time of the last acquisition end event";
	 type = SLV;
	 size = 28;
	 access_bus = READ_ONLY;
	 access_dev = WRITE_ONLY;
      };
   };

};
